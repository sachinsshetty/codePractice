Its Diwali time and there are LED series lights everywhere. Little Roy got curious about how LED lights work.

He noticed that in one single LED Bulb there are 3 LED lights, namely Red, Green and Blue.

State of the bulb at any moment is the sum of Red, Green and Blue LED light.

Bulb works as follows:

enter image description here

Roy took out all the LEDs and found that Red LED stays ON for R seconds, Green LED stays ON for G seconds and Blue LED stays ON for B seconds. Similarly they stay OFF for same respective R, G, B number of seconds. (Initially all the LEDs are OFF. See Sample Test Case Explanation for better understanding)

Roy has one query for you, given the total number of seconds T, find the number of seconds Red, Green, Blue, Yellow, Cyan, Magenta, White, Black(no light) lights are visible.

Input:

One line containing space separated integers T, R, G, B

Output:

One line containing 8 space separated integers indicating the number of seconds Red, Green, Blue, Yellow, Cyan, Magenta, White, Black (no light) lights are visible. (See Sample I/O for clarification)

Constraints:

Sample Test Case Explanation:

enter image description here
SAMPLE INPUT

12 2 3 5

SAMPLE OUTPUT

1 1 1 3 2 2 0 2

Explanation

As shown in the image above, we have 0 to
, a total of seconds. State of Bulb for each second is also shown. Red, Blue and Green occur for 1 second; Yellow occur for 3 seconds; Cyan, Magenta and Black occur for 2 seconds and White does not occur at all. (Remember you have to output in sequence and hence the output is (

Time Limit: 2.0 sec(s) for each input file.
Memory Limit: 256 MB
Source Limit: 50 KB
Marking Scheme: Marks are awarded when all the testcases pass.
Allowed Languages: C, C++, C++14, Clojure, C#, D, Erlang, F#, Go, Groovy, Haskell, Java, Java 8, JavaScript(Rhino), JavaScript(Node.js), Julia, Kotlin, Lisp, Lisp (SBCL), Lua, Objective-C, OCaml, Octave, Pascal, Perl, PHP, Python, Python 3, R(RScript), Racket, Ruby, Rust, Scala, Swift, Swift-4.1, Visual Basic
------code


/*package whatever //do not write package name here */

import java.io.*;
import java.util.*;
class GFG {
	public static void main (String[] args) {
		Scanner scn= new Scanner(System.in);
		
		int time = scn.nextInt();
		int red_d = scn.nextInt();
		int green_d = scn.nextInt();
		int blue_d = scn.nextInt();
		
		int tmp_red, tmp_grn, tmp_blue;
		int red[] = new int[time];
		int green[] = new int[time];
		int blue[] = new int[time];
		
		int ou_red=0, ou_grn=0,ou_blue=0, ou_yell=0,ou_cyn=0,ou_mag=0,ou_wh=0,ou_blk=0;
		
		boolean redbl =false;
		boolean greenbl= false;
		boolean bluebl=false;
		tmp_red = red_d;
		tmp_blue = blue_d;
		tmp_grn =green_d;
		for(int i=0;i< time;i++)
		{
		    if(tmp_red>0)
		    {
		        
		        //redbl=false;
		        
		        
		    }
		    else{
		        if(redbl)
		            redbl = false;
		        else
		            redbl = true;
		        tmp_red = red_d;
		        
		    }
		     if(tmp_grn>0)
		    {
		        
		        //redbl=false;
		        
		        
		    }
		    else{
		        if(greenbl)
		            greenbl = false;
		        else
		            greenbl = true;
		        tmp_grn = green_d;
		        
		    }
		    
		    
		     if(tmp_blue>0)
		    {
		        
		        //redbl=false;
		        
		        
		    }
		    else{
		        if(bluebl)
		            bluebl = false;
		        else
		            bluebl = true;
		        tmp_blue = blue_d;
		        
		    }
		    
		    
		    
		    
		    
		    tmp_red --;
		    tmp_blue --;
		    tmp_grn --;
		    if(redbl)
		        red[i]=1;
		    else    
		        red[i] =0;
		  
		    if(greenbl)
		        green[i]=1;
		    else    
		        green[i] =0;
		  
		    if(bluebl)
		        blue[i]=1;
		    else    
		        blue[i] =0;
		        
		        
		}
		
		for(int i=0;i< time;i++){
	//	System.out.print(red[i]);
		if(red[i]==1 && green[i] ==0 && blue[i] ==0 )
		    ou_red++;
		if(red[i]==0 && green[i] ==1 && blue[i] ==0 )
		    ou_grn++;
		if(red[i]==0 && green[i] ==0 && blue[i] ==1 )
		    ou_blue++;
		if(red[i]==1 && green[i] ==1 && blue[i] ==0 )
		    ou_yell++;
		if(red[i]==0 && green[i] ==1 && blue[i] ==1 )
		    ou_cyn++;
		if(red[i]==1 && green[i] ==0 && blue[i] ==1 )
		    ou_mag++;
		if(red[i]==1 && green[i] ==1 && blue[i] ==1 )
		    ou_wh++;
		if(red[i]==0 && green[i] ==0 && blue[i] ==0 )
		    ou_blk++;
		  
		
	}
	
	System.out.println(ou_red + " " + ou_grn + " " + ou_blue + " " + ou_yell + " " + ou_cyn + " " + ou_mag+ " "+ ou_wh+ " " + ou_blk);
}}