Bob has an array A[] of N integers. Initially, all the elements of the array are zero. Bob asks you to perform Q operations on this array.

There are three types of operations that can be performed:

     1 X: Update the value of A[X] to  2 * A[X] + 1.
     2 X: Update the value A[X] to 

A[x]/2 , where

    is Greatest Integer Function.
     3 X Y: Take all the A[i] such that  X <= i <= Y and convert them into their corresponding binary strings. Now concatenate all the binary strings and find the total no. of '1' in the resulting string.

Note: It is guaranteed that there is at least 1 type-3 query in the every test case. All the array elements will fit into 64 bit integers.

Input Format:
First line consists of two space-separated integers N and Q.
Next, Q lines consist of Q operations of either of the 3 types as described above.

Output Format:
For each type-3 query print the answer that is the no. of '1' in the resulting string.

Constraints:

 

 
SAMPLE INPUT

5 5
1 1
1 2
1 3
3 1 3
3 2 4

SAMPLE OUTPUT

3
2

Explanation

Initially, A=[0,0,0,0,0]

After 1st query, A=[1,0,0,0,0]

After 2nd query, A=[1,1,0,0,0]

After 3rd query, A=[1,1,1,0,0]

For 4th query, no. of '1' in binary representation of A[1]=A[2]=A[3]=1. So, answer=3.

For 5th query, answer is 2.

 Time Limit: 1.0 sec(s) for each input file.
Memory Limit: 256 MB
Source Limit: 1024 KB
Marking Scheme: Marks are awarded when all the testcases pass.
Allowed Languages: C, C++, C++14, Clojure, C#, D, Erlang, F#, Go, Groovy, Haskell, Java, Java 8, JavaScript(Rhino), JavaScript(Node.js), Julia, Kotlin, Lisp, Lisp (SBCL), Lua, Objective-C, OCaml, Octave, Pascal, Perl, PHP, Python, Python 3, R(RScript), Racket, Ruby, Rust, Scala, Swift, Swift-4.1, Visual Basic


-------code

/* IMPORTANT: Multiple classes and nested static classes are supported */

/*
 * uncomment this if you want to read input.
//imports for BufferedReader
import java.io.BufferedReader;
import java.io.InputStreamReader;

//import for Scanner and other utility classes
import java.util.*;
*/
import java.util.*;

// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail

class TestClass {
    public static void main(String args[] ) throws Exception {
        /* Sample code to perform I/O:
         * Use either of these methods for input

        //BufferedReader
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String name = br.readLine();                // Reading input from STDIN
        System.out.println("Hi, " + name + ".");    // Writing output to STDOUT

        //Scanner
        Scanner s = new Scanner(System.in);
        String name = s.nextLine();                 // Reading input from STDIN
        System.out.println("Hi, " + name + ".");    // Writing output to STDOUT

        */

        // Write your code here
            
        Scanner s = new Scanner(System.in);
        
        int size = s.nextInt();
        int qlist=  s.nextInt();
        
        int array[]= new int[size];
        for(int i=0;i< size;i++)
            array[i] = 0;
                
        
        for(int i=0;i< qlist;i++)
        {
            int type = s.nextInt();
            
            switch(type)
            {
                case 1:
                    int tmp = s.nextInt();
                    array[tmp] = 2 * array[tmp] +1; 
                    
                    break;
                case 2:
                    int tmp2 = s.nextInt();
                    array[tmp2] = (int)Math.floor(array[tmp2]/2);
                    break;
                case 3:
                    int x = s.nextInt();
                    int y = s.nextInt();
                    String tmpS="";
                    for(int j =0;j< size;j++ )
                    {
                        if(x <= j && j<= y)
                        {
                            tmpS += Integer.toBinaryString(array[j]);
                        }
                    }
                    
                    int count =0;
                    for(int j=0;j< tmpS.length();j++ )
                    {
                        if(tmpS.charAt(j) == '1')
                            count++;
                    }
                    
                    System.out.println(count);
                    
                    
                    break;
            }
        }
    }
}
