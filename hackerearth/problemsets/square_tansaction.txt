Square Inc. processes thousands of transactions daily amounting to millions of dollars. They also have a daily target that they must achieve. Given a list of transactions done by Square Inc. and a daily target your task is to determine at which transaction does Square achieves the same.

Input:
First line contains T, number of transactions done by Square in a day.
The following line contains T integers, the worth of each transactions.
Next line contains Q, the no of queries.
Next Q lines contain an integer each representing the daily target.

Output:
For each query, print the transaction number where the daily limit is achieved or -1 if the target can't be achieved.

Constraints:
1<= T <=100000
1<= Ai <=1000
1<= Target <= 109
1<=Q<=1000000

Problem statement in native language : http://hck.re/7Hb1a3
SAMPLE INPUT

5
1 2 1 3 4
3
4
2
10

SAMPLE OUTPUT

3
2
5

Time Limit: 1.0 sec(s) for each input file.
Memory Limit: 256 MB
Source Limit: 1024 KB
Marking Scheme: Marks are awarded when all the testcases pass.
Allowed Languages: C, C++, C++14, Clojure, C#, D, Erlang, F#, Go, Groovy, Haskell, Java, Java 8, JavaScript(Rhino), JavaScript(Node.js), Julia, Kotlin, Lisp, Lisp (SBCL), Lua, Objective-C, OCaml, Octave, Pascal, Perl, PHP, Python, Python 3, R(RScript), Racket, Ruby, Rust, Scala, Swift, Swift-4.1, Visual Basic




---------code
/* IMPORTANT: Multiple classes and nested static classes are supported */

/*
 * uncomment this if you want to read input.
//imports for BufferedReader
import java.io.BufferedReader;
import java.io.InputStreamReader;

//import for Scanner and other utility classes
import java.util.*;
*/

import java.util.*;
// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail

class TestClass {
    public static void main(String args[] ) throws Exception {
        /* Sample code to perform I/O:
         * Use either of these methods for input

        //BufferedReader
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String name = br.readLine();                // Reading input from STDIN
        System.out.println("Hi, " + name + ".");    // Writing output to STDOUT

        //Scanner
        Scanner s = new Scanner(System.in);
        String name = s.nextLine();                 // Reading input from STDIN
        System.out.println("Hi, " + name + ".");    // Writing output to STDOUT

        */

        // Write your code here
        
        Scanner s = new Scanner(System.in);
        int noTran = s.nextInt();
        
        int vlues[] = new int[noTran];
        
        for(int i=0;i< noTran ;i++)
            vlues[i] = s.nextInt();
        int noQ = s.nextInt();
        
        int quer[] = new int[noQ];
        for(int i=0;i< noQ ;i++)
        {
            quer[i] = s.nextInt();
            int tmpSum=0;
            for(int j =0; j< noTran ;j++)
            {
                if(tmpSum + vlues[j] < quer[i])
                    tmpSum += vlues[j];
                else
                    {
                        System.out.println(j+1);
                        break;
                    }
            }   
        }
            
            
        
        
        
        

    }
}

